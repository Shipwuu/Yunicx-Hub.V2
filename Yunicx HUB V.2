-- Script log v.2
local existingScreenGui = game:GetService("CoreGui"):FindFirstChild("ShipuHub")
if existingScreenGui then
    existingScreenGui:Destroy() -- Destroy the previous ScreenGui if it exists
end

local ShipuHub = Instance.new("ScreenGui")
ShipuHub.Name = "ShipuHub"
ShipuHub.Parent = game:GetService("CoreGui")

-- Local -------------------------------------------- start

local MainFrame = Instance.new("Frame")
local SecondMainFrame = Instance.new("Frame")
local SettingUIFrame = Instance.new("Frame")
local ToggleUI = Instance.new("ImageButton")
local HiddenFrame1 = Instance.new("Frame")
local HiddenFrame2 = Instance.new("Frame")
local ToggleUISetting = Instance.new("ImageButton")


-- Local -------------------------------------------- end

-- UI -------------------------------------------- start
-- Layout for MainFrame
local MainLayout = Instance.new("UIListLayout")
MainLayout.FillDirection = Enum.FillDirection.Horizontal
MainLayout.Padding = UDim.new(0, 9)
MainLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
MainLayout.VerticalAlignment = Enum.VerticalAlignment.Center
MainLayout.Parent = MainFrame
-- -------------------------------------------------------------------------
-- Layout for SettingUIFramr
local SecondButtonLayout = Instance.new("UIListLayout")
SecondButtonLayout.FillDirection = Enum.FillDirection.Horizontal
SecondButtonLayout.Padding = UDim.new(0, 5)
SecondButtonLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
SecondButtonLayout.VerticalAlignment = Enum.VerticalAlignment.Center
SecondButtonLayout.Parent = SettingUIFrame
-- -------------------------------------------------------------------------
-- Layout for SecondMainFrame
local SecondButtonLayout = Instance.new("UIListLayout")
SecondButtonLayout.FillDirection = Enum.FillDirection.Horizontal
SecondButtonLayout.Padding = UDim.new(0, 5)
SecondButtonLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
SecondButtonLayout.VerticalAlignment = Enum.VerticalAlignment.Center
SecondButtonLayout.Parent = SecondMainFrame
-- -------------------------------------------------------------------------
local SecondMainUICorner = Instance.new("UICorner")
SecondMainUICorner.CornerRadius = UDim.new(10, 10)
SecondMainUICorner.Parent = MainFrame
-- -------------------------------------------------------------------------
local SecondMainUICorner = Instance.new("UICorner")
SecondMainUICorner.CornerRadius = UDim.new(10, 10)
SecondMainUICorner.Parent = SecondMainFrame
-- -------------------------------------------------------------------------
local SecondMainUICorner = Instance.new("UICorner")
SecondMainUICorner.CornerRadius = UDim.new(10, 10)
SecondMainUICorner.Parent = SettingUIFrame
-- -------------------------------------------------------------------------
local ToggleUISettingUICorner = Instance.new("UICorner")
ToggleUISettingUICorner.CornerRadius = UDim.new(10, 10)
ToggleUISettingUICorner.Parent = ToggleUISetting
-- -------------------------------------------------------------------------
local ToggleUISettingUICorner = Instance.new("UICorner")
ToggleUISettingUICorner.CornerRadius = UDim.new(10, 10)
ToggleUISettingUICorner.Parent = ToggleUI
-- -------------------------------------------------------------------------
local SecondMainUIGradient = Instance.new("UIGradient")
SecondMainUIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))  -- A softer gradient
})
SecondMainUIGradient.Rotation = 0 -- Initial rotation
SecondMainUIGradient.Parent = SecondMainFrame

local TweenService = game:GetService("TweenService")
local rotationTween = TweenService:Create(
    SecondMainUIGradient,
    TweenInfo.new(3, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut, -1, true),
    {Rotation = 360}
)

rotationTween:Play()
-- -------------------------------------------------------------------------
local SettingUIFrameUIGradient = Instance.new("UIGradient")
SettingUIFrameUIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50)) -- A softer gradient
})
SettingUIFrameUIGradient.Rotation = 0
SettingUIFrameUIGradient.Parent = SettingUIFrame

local TweenService = game:GetService("TweenService")
local rotationTween = TweenService:Create(
    SettingUIFrameUIGradient,
    TweenInfo.new(3, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut, -1, true),
    {Rotation = 360}
)

rotationTween:Play()

-- UI -------------------------------------------- end

-- Local Properties -------------------------------------------- start

SecondMainFrame.Name = "ScriptFile"
SecondMainFrame.Size = UDim2.new(0.5, 60, 0, 48)  -- Updated size
SecondMainFrame.Position = UDim2.new(0, 0, 0, 0)  -- Updated position
SecondMainFrame.BackgroundColor3 = Color3.fromRGB(85, 255, 255)
SecondMainFrame.BackgroundTransparency = 0.4
SecondMainFrame.Parent = MainFrame
-- -------------------------------------------------------------------------
SettingUIFrame.Name = "UISetting"
SettingUIFrame.Size = UDim2.new(0, 58, 0, 48)
SettingUIFrame.Position = UDim2.new(0, 0, 0, 0)
SettingUIFrame.BackgroundColor3 = Color3.fromRGB(85, 255, 255)
SettingUIFrame.BackgroundTransparency = 0.4
SettingUIFrame.Parent = MainFrame
-- -------------------------------------------------------------------------
ToggleUISetting.Name = "ToggleUISetting"
ToggleUISetting.Size = UDim2.new(0, 37, 0, 37)
ToggleUISetting.Position = UDim2.new(0, 0, 0, HiddenFrame.Size.Y.Offset)  -- Position based on HiddenFrame height
ToggleUISetting.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ToggleUISetting.BackgroundTransparency = 0.8
ToggleUISetting.Image = "rbxthumb://type=Asset&id=81494025675609&w=420&h=420" -- The arrow pointing to the right
ToggleUISetting.Parent = SettingUIFrame
-- -------------------------------------------------------------------------
ToggleUI.Name = "AToggleUI"
ToggleUI.Size = UDim2.new(0, 40, 0, 40)
ToggleUI.Position = UDim2.new(0.57, 0, 0, 4)
ToggleUI.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ToggleUI.BackgroundTransparency = 0.8
ToggleUI.Image = "rbxthumb://type=Asset&id=110719997714211&w=420&h=420" -- Default image
ToggleUI.PressedImage = "rbxthumb://type=Asset&id=129960511211863&w=420&h=420" -- Pressed image
ToggleUI.Parent = MainFrame
-- -------------------------------------------------------------------------
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0.4, 0, 0, 47)  -- Initial size (collapsed)
MainFrame.Position = UDim2.new(0.6, 0, 0, -47)  -- Initial position
MainFrame.BackgroundTransparency = 1
MainFrame.Parent = ShipuHub
-- ------------------------------------------------------------------------
HiddenFrame1.Name = "AFrame"
HiddenFrame1.Size = UDim2.new(0, 5, 0, 30)
HiddenFrame1.Position = UDim2.new(0, 0, 0, 0)
HiddenFrame1.BackgroundTransparency = 1
HiddenFrame1.Parent = SecondMainFrame
-- -------------------------------------------------------------------------
HiddenFrame2.Name = "ZFrame"
HiddenFrame2.Size = UDim2.new(0, 5, 0, 30)
HiddenFrame2.Position = UDim2.new(0, 0, 0, 0)
HiddenFrame2.BackgroundTransparency = 1
HiddenFrame2.Parent = SettingUIFrame
-- -------------------------------------------------------------------------
-- -------------------------------------------------------------------------

-- Local Properties -------------------------------------------- end

-- Script UI -------------------------------------------------------------------------

local isOpen = true -- Track the toggle state
local TweenService = game:GetService("TweenService")

local function toggleUI()
    if isOpen then
        -- Close the MainFrame (shrink it)
        local closeTween = TweenService:Create(
            MainFrame,
            TweenInfo.new(1, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out),
            {Size = UDim2.new(0, 0, 0, 47)} -- Shrink the width
        )
        closeTween:Play()

        -- Fade out SecondMainFrame and SettingUIFrame (make transparent)
        local fadeTween = TweenService:Create(
            SecondMainFrame,
            TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out),
            {BackgroundTransparency = 1}
        )
        fadeTween:Play()

        -- Fade out SecondMainFrame and SettingUIFrame (make transparent)
        local fadeTween = TweenService:Create(
            SettingUIFrame,
            TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out),
            {BackgroundTransparency = 1}
        )
        fadeTween:Play()

        -- Wait for the tween to finish and change the image
        closeTween.Completed:Connect(function()
            ToggleUI.Image = "rbxthumb://type=Asset&id=110719997714211&w=420&h=420" -- Reset to the default image
        end)
    else
        -- Open the MainFrame (expand it)
        local openTween = TweenService:Create(
            MainFrame,
            TweenInfo.new(1, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out),
            {Size = UDim2.new(0.4, 0, 0, 47)} -- Expand to original size
        )
        openTween:Play()

        -- Fade in SecondMainFrame and SettingUIFrame (make opaque)
        local fadeTween = TweenService:Create(
            SecondMainFrame,
            TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out),
            {BackgroundTransparency = 0.4}
        )
        fadeTween:Play()

        -- Fade in SecondMainFrame and SettingUIFrame (make opaque)
        local fadeTween = TweenService:Create(
            SettingUIFrame,
            TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out),
            {BackgroundTransparency = 0.4}
        )
        fadeTween:Play()

        -- Wait for the tween to finish and change the image
        openTween.Completed:Connect(function()
            ToggleUI.Image = "rbxthumb://type=Asset&id=129960511211863&w=420&h=420" -- Set to the pressed image
        end)
    end

    -- Toggle the open state
    isOpen = not isOpen
end

-- Connect the ToggleUI ImageButton to toggle functionality
ToggleUI.MouseButton1Click:Connect(toggleUI)
-- -------------------------------------------------------------------------
-- Draggable function
local function dragMain(dragpoint, gui)
    local dragging
    local dragStart = Vector3.new(0, 0, 0)
    local startPos

    -- Function to update the position during drag
    local function update(input)
        -- Check if startPos is valid before using it
        if startPos then
            local delta = input.Position - dragStart
            -- Update the position of the GUI
            local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, gui.Position.Y.Scale, gui.Position.Y.Offset)
            gui.Position = newPos
        end
    end

    -- Input handling
    dragpoint.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position -- Ensure startPos is assigned here

            -- Reset dragging state when the input ends
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    -- Handle continuous movement when input changes
    dragpoint.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragging then
                update(input)
            end
        end
    end)
end

-- Apply the dragMain function to the MainFrame and ToggleUI
dragMain(ToggleUI, MainFrame)
dragMain(ToggleUI, UltraFrame)


-- Script UI -------------------------------------------------------------------------
-- Script log v.2
