-- Step 1: Create the ScreenGui and main UI components
local existingScreenGui = game:GetService("CoreGui"):FindFirstChild("ShipuHub")
if existingScreenGui then
    existingScreenGui:Destroy() -- Destroy the previous ScreenGui if it exists
end

local ShipuHub = Instance.new("ScreenGui")
ShipuHub.Name = "ShipuHub"
ShipuHub.Parent = game:GetService("CoreGui")

local UltraFrame = Instance.new("Frame")
UltraFrame.Name = "UltraFrame"
UltraFrame.Size = UDim2.new(1, 0, 0, 47)  -- Updated size
UltraFrame.Position = UDim2.new(0, 0, 0, -47)  -- Updated position
UltraFrame.BackgroundTransparency = 1
UltraFrame.Parent = ShipuHub

local UltraLayout = Instance.new("UIListLayout")
UltraLayout.FillDirection = Enum.FillDirection.Horizontal
UltraLayout.Padding = UDim.new(0, 9)
UltraLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
UltraLayout.VerticalAlignment = Enum.VerticalAlignment.Center
UltraLayout.Parent = UltraFrame

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0.4, 0, 0, 47)  -- Updated size
MainFrame.Position = UDim2.new(0.6, 0, 0, -46)  -- Updated position
MainFrame.BackgroundTransparency = 1
MainFrame.Parent = UltraFrame

local MainLayout = Instance.new("UIListLayout")
MainLayout.FillDirection = Enum.FillDirection.Horizontal
MainLayout.Padding = UDim.new(0, 9)
MainLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
MainLayout.VerticalAlignment = Enum.VerticalAlignment.Center
MainLayout.Parent = MainFrame

local SecondMainFrame = Instance.new("Frame")
SecondMainFrame.Name = "ScriptFile"
SecondMainFrame.Size = UDim2.new(0.5, 60, 0, 48)  -- Updated size
SecondMainFrame.Position = UDim2.new(0, 0, 0, 0)  -- Updated position
SecondMainFrame.BackgroundColor3 = Color3.fromRGB(85, 255, 255)
SecondMainFrame.BackgroundTransparency = 0.4
SecondMainFrame.Parent = MainFrame  -- Now parent to MainFrame

-- Create the ToggleUI ImageButton
local ToggleUI = Instance.new("ImageButton")
ToggleUI.Name = "ToggleUI"
ToggleUI.Size = UDim2.new(0, 37, 0, 37)
ToggleUI.Position = UDim2.new(0, 0, 0, 0)
ToggleUI.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ToggleUI.BackgroundTransparency = 0.8
ToggleUI.Image = "rbxthumb://type=Asset&id=110719997714211&w=420&h=420" -- Default image
ToggleUI.PressedImage = "rbxthumb://type=Asset&id=129960511211863&w=420&h=420" -- Pressed image
ToggleUI.Parent = UltraFrame

-- Apply UICorner to AddScriptButton
local UICornerButton = Instance.new("UICorner")
UICornerButton.CornerRadius = UDim.new(10, 10)
UICornerButton.Parent = ToggleUI

-- Step 2: Toggle functionality for MainFrame
local isOpen = false -- Track the toggle state
local TweenService = game:GetService("TweenService")

local function toggleUI()
    if isOpen then
        -- Close MainFrame with animation
        local closeTween = TweenService:Create(
            MainFrame,
            TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out),
            {Size = UDim2.new(0.4, 0, 0, 47)}
        )
        closeTween:Play()
    else
        -- Open MainFrame with animation
        local openTween = TweenService:Create(
            MainFrame,
            TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out),
            {Size = UDim2.new(0.4, 0, 0, 47)}
        )
        openTween:Play()
    end

    -- Toggle the open state
    isOpen = not isOpen
end

-- Connect the ToggleUI button to the toggle functionality
ToggleUI.MouseButton1Click:Connect(toggleUI)

-- Step 3: Draggable functionality for MainFrame (horizontal drag only)
local dragging = false
local dragStart = nil
local startPos = nil

local function onDragStart(input)
    dragging = true
    dragStart = input.Position
    startPos = MainFrame.Position
end

local function onDragMove(input)
    if dragging then
        local delta = input.Position - dragStart
        -- Restrict dragging to the X-axis within the UltraFrame's bounds
        local newPos = UDim2.new(0.6, math.clamp(startPos.X.Offset + delta.X, 0, UltraFrame.Size.X.Offset - MainFrame.Size.X.Offset), 0, -46)
        MainFrame.Position = newPos
    end
end

local function onDragEnd(input)
    if dragging then
        dragging = false
        -- Add Exponential animation when releasing the frame
        local releaseTween = TweenService:Create(
            MainFrame,
            TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out),
            {Position = UDim2.new(0.6, MainFrame.Position.X.Offset, 0, -46)} -- Set the final position
        )
        releaseTween:Play()
    end
end

-- Listen for drag input
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        onDragStart(input)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        onDragMove(input)
    end
end)

MainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        onDragEnd(input)
    end
end)
